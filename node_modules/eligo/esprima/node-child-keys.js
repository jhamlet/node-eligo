/**
 * Since esprima doesn't export the keys used to determine child-nodes, we
 * track them here
 */
module.exports = {
    AssignmentExpression:  Object.freeze(['left', 'right']),
    ArrayExpression:       Object.freeze(['elements']),
    BlockStatement:        Object.freeze(['body']),
    BinaryExpression:      Object.freeze(['left', 'right']),
    BreakStatement:        Object.freeze(['label']),
    CallExpression:        Object.freeze(['callee', 'arguments']),
    CatchClause:           Object.freeze(['param', 'body']),
    ConditionalExpression: Object.freeze(['test', 'consequent', 'alternate']),
    ContinueStatement:     Object.freeze(['label']),
    DoWhileStatement:      Object.freeze(['body', 'test']),
    DebuggerStatement:     Object.freeze([]),
    EmptyStatement:        Object.freeze([]),
    ExpressionStatement:   Object.freeze(['expression']),
    ForStatement:          Object.freeze(['init', 'test', 'update', 'body']),
    ForInStatement:        Object.freeze(['left', 'right', 'body']),
    FunctionDeclaration:   Object.freeze(['id', 'params', 'body']),
    FunctionExpression:    Object.freeze(['id', 'params', 'body']),
    Identifier:            Object.freeze([]),
    IfStatement:           Object.freeze(['test', 'consequent', 'alternate']),
    Literal:               Object.freeze([]),
    LabeledStatement:      Object.freeze(['label', 'body']),
    LogicalExpression:     Object.freeze(['left', 'right']),
    MemberExpression:      Object.freeze(['object', 'property']),
    NewExpression:         Object.freeze(['callee', 'arguments']),
    ObjectExpression:      Object.freeze(['properties']),
    Program:               Object.freeze(['body']),
    Property:              Object.freeze(['key', 'value']),
    ReturnStatement:       Object.freeze(['argument']),
    SequenceExpression:    Object.freeze(['expressions']),
    SwitchStatement:       Object.freeze(['descriminant', 'cases']),
    SwitchCase:            Object.freeze(['test', 'consequent']),
    ThisExpression:        Object.freeze([]),
    ThrowStatement:        Object.freeze(['argument']),
    TryStatement:          Object.freeze(['block', 'handlers', 'finalizer']),
    UnaryExpression:       Object.freeze(['argument']),
    UpdateExpression:      Object.freeze(['argument']),
    VariableDeclaration:   Object.freeze(['declarations']),
    VariableDeclarator:    Object.freeze(['id', 'init']),
    WhileStatement:        Object.freeze(['test', 'body']),
    WithStatement:         Object.freeze(['object', 'body']),
    // For comments        
    Block:                 Object.freeze([]),
    Line:                  Object.freeze([])
};
