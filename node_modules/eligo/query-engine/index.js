
var utils = require('eligo/utils'),
    Scanner = require('./scanner'),
    tokens = require('./tokens'),
    Rule = require('./rule');
//---------------------------------------------------------------------------
// Query
//---------------------------------------------------------------------------
function Query (rules) {
    this.rules = rules;
}

Query.prototype = {
    test: function (path) {
        return this.rules.some(function (rule) {
            return rule.test(path);
        });
    },
    
    toString: function () {
        return this.rules.join(',');
    }
};
//---------------------------------------------------------------------------
// Query Engine
//---------------------------------------------------------------------------
function QueryEngine (opts) {
    opts = opts || {};
    this.options = opts;
    this.queries = {};
    this.scanner = new Scanner({
        typeKey:     opts.typeKey,
        idKey:       opts.idKey,
        typeAliases: opts.typeAliases
    });
}

QueryEngine.prototype = {
    parse: function (text) {
        var queries = this.queries,
            rules = [],
            query = null,
            scanner,
            rule;
        
        if (utils.has(queries, text)) {
            return queries[text];
        }
        
        scanner = this.scanner;
        scanner.setSource(text);
        
        scanner.scan(tokens.WHITESPACE);
        while ((rule = Rule.parse(scanner)) && !scanner.hasTerminated()) {
            rules.push(rule);
            scanner.scan(tokens.GROUP_SEPARATOR);
        }
        
        if (rules.length) {
            query = new Query(rules);
            queries[text] = query;
        }
        
        return query;
    }
};
//---------------------------------------------------------------------------
// Exports
//---------------------------------------------------------------------------
QueryEngine.Query = Query;
module.exports = QueryEngine;
