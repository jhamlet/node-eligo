var utils = require('protean'),
    Scanner = require('./scanner'),
    Rule = require('./rule'),
    tokens = require('./tokens'),
    LinkedList = utils.LinkedList,
    queryCache = {},
    Query;
//---------------------------------------------------------------------------
// Query
//---------------------------------------------------------------------------
Query = LinkedList.extend({
    test: function (path) {
        return this.some(function (rule) {
            return rule.test(path);
        });
    }
});
//---------------------------------------------------------------------------
// Exports
//---------------------------------------------------------------------------
module.exports = utils.extend(Query, {
    Rule: Rule,
    
    parse: function (src, opts) {
        var rules = [],
            query = null,
            scanner,
            rule;

        if (src instanceof Scanner) {
            scanner = src;
            src = scanner.source;
        }
        else {
            scanner = new Scanner(opts);
            scanner.setSource(src);
        }

        if (utils.has(queryCache, src)) {
            return queryCache[src];
        }
        
        scanner.scan(tokens.WHITESPACE);
        while ((rule = Rule.parse(scanner)) && !scanner.hasTerminated()) {
            rules.push(rule);
            scanner.scan(tokens.GROUP_SEPARATOR);
        }

        if (rules.length) {
            query = utils.instantiate(Query, rules);
            queryCache[src] = query;
        }

        return query;
    }
});
